<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace hrzg\widget\models\crud\base;

use hrzg\widget\models\crud\query\WidgetPageQuery;
use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\Expression;

/**
 * This is the base-model class for table "hrzg_widget_page".
 *
 * @property integer $id
 * @property string $view
 * @property integer $access_owner
 * @property string $access_domain
 * @property string $access_read
 * @property string $access_update
 * @property string $access_delete
 * @property string $created_at
 * @property string $updated_at
 *
 * @property \hrzg\widget\models\crud\WidgetPageMeta[] $hrzgWidgetPageMetas
 * @property \hrzg\widget\models\crud\WidgetPageTranslation[] $hrzgWidgetPageTranslations
 * @property string $aliasModel
 */
abstract class WidgetPage extends \yii\db\ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%hrzg_widget_page}}';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::class,
                'value' => new Expression('NOW()')
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['view'], 'required'],
            [['access_owner'], 'integer'],
            [['view', 'access_domain', 'access_read', 'access_update', 'access_delete'], 'string', 'max' => 128]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('widgets', 'ID'),
            'view' => Yii::t('widgets', 'View'),
            'access_owner' => Yii::t('widgets', 'Access Owner'),
            'access_domain' => Yii::t('widgets', 'Access Domain'),
            'access_read' => Yii::t('widgets', 'Access Read'),
            'access_update' => Yii::t('widgets', 'Access Update'),
            'access_delete' => Yii::t('widgets', 'Access Delete'),
            'created_at' => Yii::t('widgets', 'Created At'),
            'updated_at' => Yii::t('widgets', 'Updated At'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getHrzgWidgetPageMetas()
    {
        return $this->hasMany(\hrzg\widget\models\crud\WidgetPage::class, ['widget_page_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getHrzgWidgetPageTranslations()
    {
        return $this->hasMany(\hrzg\widget\models\crud\WidgetPageTranslation::class, ['widget_page_id' => 'id']);
    }


    /**
     * @inheritdoc
     * @return WidgetPageQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new WidgetPageQuery(static::class);
    }


}
